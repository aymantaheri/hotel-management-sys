version: '3.8'

services:
  # Infrastructure Services
  mongodb:
    image: mongo:latest
    container_name: hotel-mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodb_data:/data/db
    networks:
      - hotel-network

  redis:
    image: redis:alpine
    container_name: hotel-redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - hotel-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: hotel-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - hotel-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: hotel-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - hotel-network

  # Microservices
  auth-service:
    build:
      context: ./backend/auth-service
      dockerfile: Dockerfile
    container_name: hotel-auth-service
    ports:
      - "3001:3001"
    environment:
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/hotel-auth?authSource=admin
      - JWT_SECRET=your-secret-key
      - REDIS_URL=redis://redis:6379
    depends_on:
      - mongodb
      - redis
    networks:
      - hotel-network

  room-service:
    build:
      context: ./backend/room-service
      dockerfile: Dockerfile
    container_name: hotel-room-service
    ports:
      - "3002:3002"
    environment:
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/hotel-rooms?authSource=admin
    depends_on:
      - mongodb
    networks:
      - hotel-network

  reservation-service:
    build:
      context: ./backend/reservation-service
      dockerfile: Dockerfile
    container_name: hotel-reservation-service
    ports:
      - "3003:3003"
    environment:
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/hotel-reservations?authSource=admin
      - ROOM_SERVICE_URL=http://room-service:3002
    depends_on:
      - mongodb
      - room-service
    networks:
      - hotel-network

  # Frontend
  frontend:
    build:
      context: ./frontend/hotel-frontend-react
      dockerfile: Dockerfile
    container_name: hotel-frontend
    ports:
      - "80:80"
    depends_on:
      - auth-service
      - room-service
      - reservation-service
    networks:
      - hotel-network

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: hotel-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - hotel-network

  grafana:
    image: grafana/grafana:latest
    container_name: hotel-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - hotel-network

volumes:
  mongodb_data:
  grafana_data:

networks:
  hotel-network:
    driver: bridge

